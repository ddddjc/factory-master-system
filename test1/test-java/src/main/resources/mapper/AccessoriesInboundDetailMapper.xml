<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.djc.mapper.AccessoriesInboundDetailMapper">

    <resultMap type="com.djc.entity.AccessoriesInboundDetail" id="AccessoriesInboundDetailMap">
        <result property="inboundDetialId" column="inbound_detial_id" jdbcType="INTEGER"/>
        <result property="inboundId" column="inbound_id" jdbcType="INTEGER"/>
        <result property="accessoriesId" column="accessories_id" jdbcType="INTEGER"/>
        <result property="materialType" column="material_type" jdbcType="VARCHAR"/>
        <result property="inboundSum" column="inbound_sum" jdbcType="VARCHAR"/>
        <result property="inboundDate" column="inbound_date" jdbcType="VARCHAR"/>
        <result property="depotId" column="depot_id" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap id="AccessoriesInboundDetailVoMap" type="com.djc.entity.Vo.AccessoriesInboundDetailVo">
        <association property="accessoriesInboundDetail" javaType="accessoriesInboundDetail"  resultMap="AccessoriesInboundDetailMap"/>
        <association property="accessories" javaType="com.djc.entity.Accessories" column="accessories_id"
                     select="com.djc.mapper.AccessoriesMapper.queryById"/>
        <association property="inventory" javaType="inventory" column="accessories_id"
                     select="com.djc.mapper.InventoryMapper.queryByAccessoriesId"/>
        <association property="depot" javaType="depot" column="depot_id"
                     select="com.djc.mapper.DepotMapper.queryById"/>
    </resultMap>
    <!--查询单个-->
    <select id="queryById" resultMap="AccessoriesInboundDetailMap">
        select inbound_detial_id,
               inbound_id,
               accessories_id,
               material_type,
               inbound_sum,
               inbound_date,
               depot_id
        from accessories_inbound_detail
        where inbound_detial_id = #{inboundDetialId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="AccessoriesInboundDetailMap">
        select
        inbound_detial_id, inbound_id, accessories_id, material_type, inbound_sum, inbound_date, depot_id
        from accessories_inbound_detail
        <where>
            <if test="inboundDetialId != null">
                and inbound_detial_id = #{inboundDetialId}
            </if>
            <if test="inboundId != null">
                and inbound_id = #{inboundId}
            </if>
            <if test="accessoriesId != null">
                and accessories_id = #{accessoriesId}
            </if>
            <if test="materialType != null and materialType != ''">
                and material_type = #{materialType}
            </if>
            <if test="inboundSum != null and inboundSum != ''">
                and inbound_sum = #{inboundSum}
            </if>
            <if test="inboundDate != null and inboundDate != ''">
                and inbound_date = #{inboundDate}
            </if>
            <if test="depotId != null">
                and depot_id = #{depotId}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--关键字模糊查询-->
    <!--<select id="queryAll" resultMap="AccessoriesInboundDetailMap">
        SELECT * FROM accessories_inbound_detail
        where xxx LIKE CONCAT('%', #{keyword}, '%')
        LIMIT #{page},#{num}
    </select>-->


    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from accessories_inbound_detail
        <where>
            <if test="inboundDetialId != null">
                and inbound_detial_id = #{inboundDetialId}
            </if>
            <if test="inboundId != null">
                and inbound_id = #{inboundId}
            </if>
            <if test="accessoriesId != null">
                and accessories_id = #{accessoriesId}
            </if>
            <if test="materialType != null and materialType != ''">
                and material_type = #{materialType}
            </if>
            <if test="inboundSum != null and inboundSum != ''">
                and inbound_sum = #{inboundSum}
            </if>
            <if test="inboundDate != null and inboundDate != ''">
                and inbound_date = #{inboundDate}
            </if>
            <if test="depotId != null">
                and depot_id = #{depotId}
            </if>
        </where>
    </select>
    <select id="queryVoByInboundId" resultMap="AccessoriesInboundDetailVoMap">
            select accessories_inbound_detail.inbound_detial_id, accessories_inbound_detail.inbound_id, accessories_inbound_detail.accessories_id, accessories_inbound_detail.material_type, accessories_inbound_detail.inbound_sum, accessories_inbound_detail.inbound_date
            ,i.depot_id
                from accessories_inbound_detail left join accessories a on accessories_inbound_detail.accessories_id = a.accessories_id
                left join inventory i on accessories_inbound_detail.accessories_id = i.accessories_id
            where accessories_inbound_detail.inbound_id=#{inboundId}
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="inboundDetialId" useGeneratedKeys="true">
        insert into accessories_inbound_detail(inbound_id, accessories_id, material_type, inbound_sum, inbound_date,
                                               depot_id)
        values (#{inboundId}, #{accessoriesId}, #{materialType}, #{inboundSum}, #{inboundDate}, #{depotId})
    </insert>

    <insert id="insertBatch" keyProperty="inboundDetialId" useGeneratedKeys="true">
        insert into accessories_inbound_detail(inbound_id, accessories_id, material_type, inbound_sum, inbound_date,
        depot_id)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.inboundId}, #{entity.accessoriesId}, #{entity.materialType}, #{entity.inboundSum},
            #{entity.inboundDate}, #{entity.depotId})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="inboundDetialId" useGeneratedKeys="true">
        insert into accessories_inbound_detail(inbound_id, accessories_id, material_type, inbound_sum, inbound_date,
        depot_id)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.inboundId}, #{entity.accessoriesId}, #{entity.materialType}, #{entity.inboundSum},
            #{entity.inboundDate}, #{entity.depotId})
        </foreach>
        on duplicate key update
        inbound_id = values(inbound_id),
        accessories_id = values(accessories_id),
        material_type = values(material_type),
        inbound_sum = values(inbound_sum),
        inbound_date = values(inbound_date),
        depot_id = values(depot_id)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update accessories_inbound_detail
        <set>
            <if test="inboundId != null">
                inbound_id = #{inboundId},
            </if>
            <if test="accessoriesId != null">
                accessories_id = #{accessoriesId},
            </if>
            <if test="materialType != null and materialType != ''">
                material_type = #{materialType},
            </if>
            <if test="inboundSum != null and inboundSum != ''">
                inbound_sum = #{inboundSum},
            </if>
            <if test="inboundDate != null and inboundDate != ''">
                inbound_date = #{inboundDate},
            </if>
            <if test="depotId != null">
                depot_id = #{depotId},
            </if>
        </set>
        where inbound_detial_id = #{inboundDetialId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from accessories_inbound_detail
        where inbound_detial_id = #{inboundDetialId}
    </delete>

</mapper>

