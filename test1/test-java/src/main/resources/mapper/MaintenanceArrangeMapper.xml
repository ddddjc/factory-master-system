<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.djc.mapper.MaintenanceArrangeMapper">
    <resultMap type="com.djc.entity.MaintenanceArrange" id="MaintenanceArrangeMap">
        <result property="maintenanceArrangeId" column="maintenance_arrange_id" jdbcType="INTEGER"/>
        <result property="machineId" column="machine_id" jdbcType="INTEGER"/>
        <result property="machineName" column="machine_name" jdbcType="VARCHAR"/>
        <result property="employeesName" column="employees_name" jdbcType="VARCHAR"/>
        <result property="maintenanceDate" column="maintenance_date" jdbcType="TIMESTAMP"/>
        <result property="maintenanceState" column="maintenance_state" jdbcType="VARCHAR"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
    </resultMap>
<!--   联结映射-->
    <resultMap id="MaintenanceArrangeVoMap" type="com.djc.entity.Vo.MaintenanceArrangeVo" autoMapping="true">
        <result property="maintenanceArrangeId" column="maintenance_arrange_id" jdbcType="INTEGER"/>
        <result property="machineId" column="machine_id" jdbcType="INTEGER"/>
        <result property="machineName" column="machine_name" jdbcType="VARCHAR"/>
        <result property="employeesName" column="employees_name" jdbcType="VARCHAR"/>
        <result property="maintenanceDate" column="maintenance_date" jdbcType="TIMESTAMP"/>
        <result property="maintenanceState" column="maintenance_state" jdbcType="VARCHAR"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
        <collection property="employeeList" javaType="ArrayList" ofType="com.djc.entity.Vo.MaintenanceEmployeeVo"
                    column="maintenance_arrange_id" select="com.djc.mapper.MaintenanceEmployeeMapper.queryMaintenanceEmployeeVo"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="MaintenanceArrangeMap">
        select maintenance_arrange_id,
               machine_id,
               machine_name,
               employees_name,
               maintenance_date,
               maintenance_state,
               remark
        from maintenance_arrange
        where maintenance_arrange_id = #{maintenanceArrangeId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="MaintenanceArrangeMap">
        select
        maintenance_arrange_id, machine_id, machine_name, employees_name, maintenance_date, maintenance_state, remark
        from maintenance_arrange
        <where>
            <if test="maintenanceArrange.maintenanceArrangeId != null">
                and maintenance_arrange_id = #{maintenanceArrange.maintenanceArrangeId}
            </if>
            <if test="maintenanceArrange.machineId != null">
                and machine_id = #{maintenanceArrange.machineId}
            </if>
            <if test="maintenanceArrange.machineName != null and maintenanceArrange.machineName != ''">
                and machine_name = #{maintenanceArrange.machineName}
            </if>
            <if test="maintenanceArrange.employeesName != null and maintenanceArrange.employeesName != ''">
                and employees_name = #{maintenanceArrange.employeesName}
            </if>
            <if test="maintenanceArrange.maintenanceDate != null">
                and maintenance_date = #{maintenanceArrange.maintenanceDate}
            </if>
            <if test="maintenanceArrange.maintenanceState != null and maintenanceArrange.maintenanceState != ''">
                and maintenance_state = #{maintenanceArrange.maintenanceState}
            </if>
            <if test="maintenanceArrange.remark != null and maintenanceArrange.remark != ''">
                and remark = #{maintenanceArrange.remark}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--关键字模糊查询-->
    <!--<select id="queryAll" resultMap="MaintenanceArrangeMap">
        SELECT * FROM maintenance_arrange
        where xxx LIKE CONCAT('%', #{keyword}, '%')
        LIMIT #{page},#{num}
    </select>-->


    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from maintenance_arrange
        <where>
            <if test="maintenanceArrangeId != null">
                and maintenance_arrange_id = #{maintenanceArrangeId}
            </if>
            <if test="machineId != null">
                and machine_id = #{machineId}
            </if>
            <if test="machineName != null and machineName != ''">
                and machine_name = #{machineName}
            </if>
            <if test="employeesName != null and employeesName != ''">
                and employees_name = #{employeesName}
            </if>
            <if test="maintenanceDate != null">
                and maintenance_date = #{maintenanceDate}
            </if>
            <if test="maintenanceState != null and maintenanceState != ''">
                and maintenance_state = #{maintenanceState}
            </if>
            <if test="remark != null and remark != ''">
                and remark = #{remark}
            </if>
        </where>
    </select>
<!--    模糊查询-->
    <select id="queryByLike" resultMap="MaintenanceArrangeMap">
        select
        maintenance_arrange_id, machine_id, machine_name, employees_name, maintenance_date, maintenance_state, remark
        from maintenance_arrange
        <where>
            <if test="maintenanceArrange.maintenanceArrangeId != null">
                and maintenance_arrange_id like concat('%',#{maintenanceArrange.maintenanceArrangeId},'%')
            </if>
            <if test="maintenanceArrange.machineId != null">
                and machine_id like concat('%',#{maintenanceArrange.machineId},'%')
            </if>
            <if test="maintenanceArrange.machineName != null and maintenanceArrange.machineName != ''">
                and machine_name like concat('%',#{maintenanceArrange.machineName},'%')
            </if>
            <if test="maintenanceArrange.employeesName != null and maintenanceArrange.employeesName != ''">
                and employees_name like concat('%',#{maintenanceArrange.employeesName},'%')
            </if>
            <if test="maintenanceArrange.maintenanceDate != null">
                and maintenance_date like concat('%',#{maintenanceArrange.maintenanceDate},'%')
            </if>
            <if test="maintenanceArrange.maintenanceState != null and maintenanceArrange.maintenanceState != ''">
                and maintenance_state like concat('%',#{maintenanceArrange.maintenanceState},'%')
            </if>
            <if test="maintenanceArrange.remark != null and maintenanceArrange.remark != ''">
                and remark like concat('%',#{maintenanceArrange.remark},'%')
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>
    <select id="likeNum" resultType="java.lang.Integer">
        select count(1)
        from maintenance_arrange
        <where>
            <if test="maintenanceArrange.maintenanceArrangeId != null">
                and maintenance_arrange_id like concat('%',#{maintenanceArrange.maintenanceArrangeId},'%')
            </if>
            <if test="maintenanceArrange.machineId != null">
                and machine_id like concat('%',#{maintenanceArrange.machineId},'%')
            </if>
            <if test="maintenanceArrange.machineName != null and maintenanceArrange.machineName != ''">
                and machine_name like concat('%',#{maintenanceArrange.machineName},'%')
            </if>
            <if test="maintenanceArrange.employeesName != null and maintenanceArrange.employeesName != ''">
                and employees_name like concat('%',#{maintenanceArrange.employeesName},'%')
            </if>
            <if test="maintenanceArrange.maintenanceDate != null">
                and maintenance_date like concat('%',#{maintenanceArrange.maintenanceDate},'%')
            </if>
            <if test="maintenanceArrange.maintenanceState != null and maintenanceArrange.maintenanceState != ''">
                and maintenance_state like concat('%',#{maintenanceArrange.maintenanceState},'%')
            </if>
            <if test="maintenanceArrange.remark != null and maintenanceArrange.remark != ''">
                and remark like concat('%',#{maintenanceArrange.remark},'%')
            </if>
        </where>
    </select>
    
<!--    查询综合信息-->
    <select id="queryVoById" resultMap="MaintenanceArrangeVoMap">
        select * from maintenance_arrange where maintenance_arrange_id=#{id}
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="maintenanceArrangeId" useGeneratedKeys="true">
        insert into maintenance_arrange(machine_id, machine_name, employees_name, maintenance_date, maintenance_state,
                                        remark)
        values (#{machineId}, #{machineName}, #{employeesName}, #{maintenanceDate}, #{maintenanceState}, #{remark})
    </insert>

    <insert id="insertBatch" keyProperty="maintenanceArrangeId" useGeneratedKeys="true">
        insert into maintenance_arrange(machine_id, machine_name, employees_name, maintenance_date, maintenance_state,
        remark)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.machineId}, #{entity.machineName}, #{entity.employeesName}, #{entity.maintenanceDate},
            #{entity.maintenanceState}, #{entity.remark})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="maintenanceArrangeId" useGeneratedKeys="true">
        insert into maintenance_arrange(machine_id, machine_name, employees_name, maintenance_date, maintenance_state,
        remark)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.machineId}, #{entity.machineName}, #{entity.employeesName}, #{entity.maintenanceDate},
            #{entity.maintenanceState}, #{entity.remark})
        </foreach>
        on duplicate key update
        machine_id = values(machine_id),
        machine_name = values(machine_name),
        employees_name = values(employees_name),
        maintenance_date = values(maintenance_date),
        maintenance_state = values(maintenance_state),
        remark = values(remark)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update maintenance_arrange
        <set>
            <if test="machineId != null">
                machine_id = #{machineId},
            </if>
            <if test="machineName != null and machineName != ''">
                machine_name = #{machineName},
            </if>
            <if test="employeesName != null and employeesName != ''">
                employees_name = #{employeesName},
            </if>
            <if test="maintenanceDate != null">
                maintenance_date = #{maintenanceDate},
            </if>
            <if test="maintenanceState != null and maintenanceState != ''">
                maintenance_state = #{maintenanceState},
            </if>
            <if test="remark != null and remark != ''">
                remark = #{remark},
            </if>
        </set>
        where maintenance_arrange_id = #{maintenanceArrangeId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from maintenance_arrange
        where maintenance_arrange_id = #{maintenanceArrangeId}
    </delete>

</mapper>

