<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.djc.mapper.EmployeeMapper">

    <resultMap type="com.djc.entity.Employee" id="EmployeeMap">
        <result property="employeeId" column="employee_id" jdbcType="INTEGER"/>
        <result property="employeeName" column="employee_name" jdbcType="VARCHAR"/>
        <result property="role" column="role" jdbcType="VARCHAR"/>
        <result property="groupId" column="group_id" jdbcType="INTEGER"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="EmployeeMap">
        select employee_id,
               employee_name,
               role,
               group_id,
               password
        from employee
        where employee_id = #{employeeId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="EmployeeMap">
        select
        employee_id, employee_name, role, group_id, password
        from employee
        <where>
            <if test="employeeId != null">
                and employee_id = #{employeeId}
            </if>
            <if test="employeeName != null">
                and employee_name = #{employeeName}
            </if>
            <if test="role != null and role != ''">
                and role = #{role}
            </if>
            <if test="groupId != null">
                and group_id = #{groupId}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--关键字模糊查询-->
    <select id="queryAll" resultMap="EmployeeMap">
        SELECT * FROM employee
        where machine.employee.employee_name LIKE CONCAT('%', #{keyWord}, '%')
        or role  LIKE CONCAT('%', #{keyWord}, '%')
        or employee_Id LIKE CONCAT('%', #{keyWord}, '%')
        LIMIT #{page},#{num}
    </select>


    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from employee
        <where>
            <if test="employeeId != null">
                and employee_id = #{employeeId}
            </if>
            <if test="employeeName != null">
                and employee_name = #{employeeName}
            </if>
            <if test="role != null and role != ''">
                and role = #{role}
            </if>
            <if test="groupId != null">
                and group_id = #{groupId}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
        </where>
    </select>
    <!--新增所有列-->
    <insert id="insert" keyProperty="employeeId" useGeneratedKeys="true">
        insert into employee(employee_name, role, group_id, password)
        values (#{employeeName}, #{role}, #{groupId}, #{password})
    </insert>

    <insert id="insertBatch" keyProperty="employeeId" useGeneratedKeys="true">
        insert into employee(employee_name, role, group_id, password)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.employeeName}, #{entity.role}, #{entity.groupId}, #{entity.password})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="employeeId" useGeneratedKeys="true">
        insert into employee(employee_name, role, group_id, password)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.employeeName}, #{entity.role}, #{entity.groupId}, #{entity.password})
        </foreach>
        on duplicate key update
        employee_name = values(employee_name),
        role = values(role),
        group_id = values(group_id),
        password = values(password)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update employee
        <set>
            <if test="employeeName != null">
                employee_name = #{employeeName},
            </if>
            <if test="role != null and role != ''">
                role = #{role},
            </if>
            <if test="groupId != null">
                group_id = #{groupId},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
        </set>
        where employee_id = #{employeeId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from employee
        where employee_id = #{employeeId}
    </delete>

</mapper>

