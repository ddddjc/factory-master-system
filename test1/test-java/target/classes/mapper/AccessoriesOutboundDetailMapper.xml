<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.djc.mapper.AccessoriesOutboundDetailMapper">

    <resultMap type="com.djc.entity.AccessoriesOutboundDetail" id="AccessoriesOutboundDetailMap">
        <result property="outboundDetailId" column="outbound_detail_id" jdbcType="INTEGER"/>
        <result property="outboundId" column="outbound_id" jdbcType="INTEGER"/>
        <result property="accessoriesId" column="accessories_id" jdbcType="INTEGER"/>
        <result property="materialType" column="material_type" jdbcType="VARCHAR"/>
        <result property="needNum" column="need_num" jdbcType="INTEGER"/>
        <result property="needDate" column="need_date" jdbcType="TIMESTAMP"/>
        <result property="depotId" column="depot_id" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="AccessoriesOutboundDetailMap">
        select outbound_detail_id,
               outbound_id,
               accessories_id,
               material_type,
               need_num,
               need_date,
               depot_id
        from accessories_outbound_detail
        where outbound_detail_id = #{outboundDetailId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="AccessoriesOutboundDetailMap">
        select
        outbound_detail_id, outbound_id, accessories_id, material_type, need_num, need_date, depot_id
        from accessories_outbound_detail
        <where>
            <if test="outboundDetailId != null">
                and outbound_detail_id = #{outboundDetailId}
            </if>
            <if test="outboundId != null">
                and outbound_id = #{outboundId}
            </if>
            <if test="accessoriesId != null">
                and accessories_id = #{accessoriesId}
            </if>
            <if test="materialType != null and materialType != ''">
                and material_type = #{materialType}
            </if>
            <if test="needNum != null">
                and need_num = #{needNum}
            </if>
            <if test="needDate != null">
                and need_date = #{needDate}
            </if>
            <if test="depotId != null">
                and depot_id = #{depotId}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--关键字模糊查询-->
    <!--<select id="queryAll" resultMap="AccessoriesOutboundDetailMap">
        SELECT * FROM accessories_outbound_detail
        where xxx LIKE CONCAT('%', #{keyword}, '%')
        LIMIT #{page},#{num}
    </select>-->


    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from accessories_outbound_detail
        <where>
            <if test="outboundDetailId != null">
                and outbound_detail_id = #{outboundDetailId}
            </if>
            <if test="outboundId != null">
                and outbound_id = #{outboundId}
            </if>
            <if test="accessoriesId != null">
                and accessories_id = #{accessoriesId}
            </if>
            <if test="materialType != null and materialType != ''">
                and material_type = #{materialType}
            </if>
            <if test="needNum != null">
                and need_num = #{needNum}
            </if>
            <if test="needDate != null">
                and need_date = #{needDate}
            </if>
            <if test="depotId != null">
                and depot_id = #{depotId}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="outboundDetailId" useGeneratedKeys="true">
        insert into accessories_outbound_detail(outbound_id, accessories_id, material_type, need_num, need_date,
                                                depot_id)
        values (#{outboundId}, #{accessoriesId}, #{materialType}, #{needNum}, #{needDate}, #{depotId})
    </insert>

    <insert id="insertBatch" keyProperty="outboundDetailId" useGeneratedKeys="true">
        insert into accessories_outbound_detail(outbound_id, accessories_id, material_type, need_num, need_date,
        depot_id)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.outboundId}, #{entity.accessoriesId}, #{entity.materialType}, #{entity.needNum},
            #{entity.needDate}, #{entity.depotId})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="outboundDetailId" useGeneratedKeys="true">
        insert into accessories_outbound_detail(outbound_id, accessories_id, material_type, need_num, need_date,
        depot_id)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.outboundId}, #{entity.accessoriesId}, #{entity.materialType}, #{entity.needNum},
            #{entity.needDate}, #{entity.depotId})
        </foreach>
        on duplicate key update
        outbound_id = values(outbound_id),
        accessories_id = values(accessories_id),
        material_type = values(material_type),
        need_num = values(need_num),
        need_date = values(need_date),
        depot_id = values(depot_id)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update accessories_outbound_detail
        <set>
            <if test="outboundId != null">
                outbound_id = #{outboundId},
            </if>
            <if test="accessoriesId != null">
                accessories_id = #{accessoriesId},
            </if>
            <if test="materialType != null and materialType != ''">
                material_type = #{materialType},
            </if>
            <if test="needNum != null">
                need_num = #{needNum},
            </if>
            <if test="needDate != null">
                need_date = #{needDate},
            </if>
            <if test="depotId != null">
                depot_id = #{depotId},
            </if>
        </set>
        where outbound_detail_id = #{outboundDetailId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from accessories_outbound_detail
        where outbound_detail_id = #{outboundDetailId}
    </delete>

</mapper>

